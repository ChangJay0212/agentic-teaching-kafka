version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:29092 --list"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama-data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "ollama list || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    # If you have NVIDIA GPU support, uncomment the following section
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  agentic-app:
    build: .
    container_name: agentic-app
    depends_on:
      kafka:
        condition: service_healthy
      ollama:
        condition: service_healthy
    environment:
      # Kafka configuration
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      
      # Ollama configuration
      - OLLAMA_BASE_URL=http://ollama:11434
      - OLLAMA_MODEL=${OLLAMA_MODEL:-llama3.1:8b}
      
      # Cost calculation configuration
      - OLLAMA_INPUT_COST_PER_1K_TOKENS=${OLLAMA_INPUT_COST_PER_1K_TOKENS:-0.0}
      - OLLAMA_OUTPUT_COST_PER_1K_TOKENS=${OLLAMA_OUTPUT_COST_PER_1K_TOKENS:-0.0}
      
      # System configuration
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - REQUEST_TIMEOUT=${REQUEST_TIMEOUT:-30}
      - PREFERRED_ENGINE=ollama
    volumes:
      - ./.env:/app/.env:ro
      - ./logs:/app/logs
    stdin_open: true
    tty: true
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "python -c 'from src.core.kafka_client import KafkaClient; import sys; sys.exit(0 if KafkaClient().health_check() else 1)'"]
      interval: 30s
      timeout: 10s
      start_period: 60s
      retries: 3

volumes:
  ollama-data:
